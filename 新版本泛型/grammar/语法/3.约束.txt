约束
    接口是实现泛型的基础
    如果一个数组元素类型是interface{...}的话
    那么实现了该接口的实体都可以被防止在数组中

Constraint类型 (约束类型)
    约束的意思是限定范围, constraint的作用就是限定范围, 将T限定在某种范围内

    常用的范围:
    any         (interface{}, 任何类型都能接收, 多方便啊!)
    Integer     (所有int, 多方便啊, int64 int32…一网打尽)
    Float       (所有float)
    comparable  (所有可以比较的类型, 我们可以给所有可以比较的类型定制一些方法)

    这些约束, 不是被官方定义为内置类型, 就是被涵盖在了constraints包内!!!
    但是官方写好了这些约束类型的范围，可以直接使用


comparable类型
    所有可以比较的类型
    能支持的运算符只有等于和不等于


接口约束
    实际上约束类型就是用接口实现的
    在接口中写上具体的类型，然后用这个接口约束类型
    只有在接口中的类型，才可以使用泛型

    但是接口并不只是可以写类型，还可以写方法
    用方法约束，只有实现了这个方法的类型，才能使用泛型