格式

func 函数名 [泛型名 泛型类型] (参数名 类型) {}

any类型 (任何类型)
    any就是原来的interface{}
    any本身也是一种类型，是一种代表任何类型的类型
    可以用在声明任何类型上，切片，map，结构体，函数等


注意
    泛型是在编译阶段不确定类型
    但是运行阶段的时候，类型是确定的
    这个确定的意思是只能是一种具体的类型
    而不是任意类型

    比如计算两个数的和，这两个参数可以是任意可以计算的类型
    但是必须是同一种类型，不能一个是整型，一个是浮点型
    因为在运行的时候会确定这个类型是整型还是浮点型，一旦确定就不能变了
    同样的，如果运行时确定了是整型，那么无法返回浮点型的结果

    可以这么说，泛型有两种类型
        一种是是编译期的泛型，go语言现在使用的泛型
        一种是全局的泛型，interface{}空接口


    当需要编译时泛型，用现在的泛型
    当需要运行时泛型，用空接口

    严格来说，调用编译时的泛型，都需要明确指定类型的，只不过go语言的语法糖可以省略