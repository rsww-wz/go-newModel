打印日志函数和设置日志函数都是包内的全局函数

打印日志函数
    print类
        log.Print()
        log.Println()
        log.Printf()


    panic类
        log.panic()
        log.panicln()
        log.panicf()


    fatal类
        log.Fatal()
        log.Fatalln()
        log.Fatalf()





设置输出格式
    log.SetPrefix(prefix string)
        设置前缀，最开头显示


    func SetOutput(w io.Writer)
        设置日志输出的位置
        参数：实现io.Writer接口的都可以
        一般是输出到文件中


    SetFlags(flag int)
        设置flag格式

        Ldate         = 1 << iota     1 << 0 = 1       //日期示例： 2009/01/23
        Ltime                         1 << 1 = 2       //时间示例: 01:23:23
        Lmicroseconds                 1 << 2 = 4       //毫秒示例: 01:23:23.123123.
        Llongfile                     1 << 3 = 8       //绝对路径和行号: /a/b/c/d.go:23
        Lshortfile                    1 << 4 = 16      //文件和行号: d.go:23.

        LUTC                          1 << 5 = 32      //日期时间转为0时区的

        LstdFlags     = Ldate | Ltime  1 | 2 = 3       //Go提供的标准抬头信息

        他们之间可以相互组合

