代码格式化工具
    Go语言的开发团队制定了统一的官方代码风格
    并且推出了gofmt 工具(gofmt 或 go fm)来帮助开发者格式化他们的代码到统一的风格

    gofmt 是一个 cli 程序，会优先读取标准输入
    如果传入了文件路径的话，会格式化这个文件
    如果传入一个目录，会格式化目录中所有 .go 文件
    如果不传参数，会格式化当前目录下的所有 .go 文件

    gofmt 默认不对代码进行简化
    使用-s参数可以开启简化代码功能，具体来说会进行如下的转换
        1) 去除数组、切片、Map 初始化时不必要的类型声明
        2) 去除数组切片操作时不必要的索引指定
        3) 去除循环时非必要的变量赋值


参数
    -l	        仅把那些不符合格式化规范的、需要被命令程序改写的源码文件的绝对路径打印到标准输出
                而不是把改写后的全部内容都打印到标准输出

    -w	        把改写后的内容直接写入到文件中，而不是作为结果打印到标准输出
    -r	        添加形如“a[b:len(a)] -> a[b:]”的重写规则
                如果我们需要自定义某些额外的格式化规则，就需要用到它
                使用-r参数，按照 pattern -> replacement 的格式传入规则

    -s	        简化文件中的代码

    -d	        只把改写前后内容的对比信息作为结果打印到标准输出。而不是把改写后的全部内容都打印到标准输出
                命令程序将使用 diff 命令对内容进行比对
                在 Windows 操作系统下可能没有 diff 命令，需要另行安装

    -e	        打印所有的语法错误到标准输出
                如果不使用此标记，则只会打印每行的第 1 个错误且只打印前 10 个错误

    -comments	是否保留源码文件中的注释
                在默认情况下，此标记会被隐式的使用，并且值为 true

    -tabwidth	此标记用于设置代码中缩进所使用的空格数量，默认值为8
                要使此标记生效，需要使用“-tabs”标记并把值设置为 false

    -tabs	    是否使用 tab（'\t'）来代替空格表示缩进
                在默认情况下，此标记会被隐式的使用，并且值为 true

    -cpuprofile	是否开启CPU使用情况记录，并将记录内容保存在此标记值所指的文件中