go mod简介
    Go.mod是 Golang1.11 版本新引入的官方包管理工具
    用于解决之前没有地方记录依赖包具体版本的问题，方便依赖包的管理

    Go.mod其实就是一个Modules，关于Modules的官方定义为：
    Modules是相关Go包的集合，是源代码交换和版本控制的单元
    go命令直接支持使用Modules，包括记录和解析对其他模块的依赖性
    Modules替换旧的基于GOPATH的方法，来指定使用哪些源文件
    Modules和传统的GOPATH不同，不需要包含例如src，bin这样的子目录
    一个源代码目录甚至是空目录都可以作为Modules，只要其中包含有go.mod文件


go mod项目管理的工具，等到项目管理在具体说明
现在简单了解一下go mod


go.mod配置
    支持：go 1.11版本以上
    环境变量：GO111MODULE
        GO111MODULE=off，go命令行将不会支持module功能，寻找依赖包的方式将会沿用旧版本那种通过vendor目录或者GOPATH模式来查找

        GO111MODULE=on，go命令行会使用modules，而一点也不会去GOPATH目录下查找

        GO111MODULE=auto，默认值，go命令行将会根据当前目录来决定是否启用module功能,这种情况下可以分为两种情形
                              当前目录在GOPATH/src之外且该目录包含go.mod文件
                              当前文件在包含go.mod文件的目录下面


go.mod命令
    init            初始化一个module，模块名为你项目名
    download	    download modules to local cache(下载依赖包)
    edit	        edit go.mod from tools or scripts（编辑go.mod)
    graph	        print module requirement graph (打印模块依赖图)
    verify	        initialize new module in current directory（在当前目录初始化mod）
    tidy	        add missing and remove unused modules(拉取缺少的模块，移除不用的模块)
    vendor	        make vendored copy of dependencies(将依赖复制到vendor下)
    verify	        verify dependencies have expected content (验证依赖是否正确）
    why	            explain why packages or modules are needed(解释为什么需要依赖)


go.mod文件
     文件内提供了module, require、replace和exclude四个关键字
     这里注意区分与上表中命令的区别
     一个是管理go mod命令
     一个是go mod文件内的关键字

    module      语句指定包的名字（路径）
    require     语句指定的依赖项模块
    replace     语句可以替换依赖项模块
    exclude     语句可以忽略依赖项模块

