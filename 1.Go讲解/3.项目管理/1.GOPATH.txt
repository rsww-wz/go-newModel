GOPATH简介
    GOPATH 是 Go语言中使用的一个环境变量，它使用绝对路径提供项目的工作目录
    Go从1.1版本到1.7必须设置这个变量
    而且GOPATH 下面要有这三个文件夹

        bin
            是Go放置go install编译二进制文件的位置
            我们的操作系统使用$PATH环境变量查找无需完整路径即可执行的二进制应用程序
            建议将此目录添加到我们的全局$PATH变量中

        pkg
            是Go存放预编译目标文件的目录，以加快程序的后续编译速度
            通常，大多数开发人员不需要访问该目录。
            如果您遇到编译问题，则可以安全地删除此目录，然后Go会重新构建它

        src
            项目源代码位置
            github：第三方库源代码


GOPATH工作原理
    在src文件下建立项目文件夹，写源代码
    如果需要第三方包，这下载到github中
    import第三方包的路径：从src下开始搜索


GOPATH管理项目的缺点
    GOPATH管理项目是go官方一开始提供的方法
    其中的问题非常多

    例如
        代码只能写在GOPATH目录下才能运行，配置麻烦

        需要写多个项目时，如何解决第三方库版本冲突问题

        go get来拉取外部依赖会自动下载并安装到$GOPATH目录下

        第三方库只要不是官方库，都需要放置在GOPATH/src的路径下才可以使用
        造成结构混轮，除了有你自己开发的代码目录，同时也包含其他第三方库的专属目录

        如果要解决版本冲突问题
            一个项目使用一个GOPATH
            这样，每个项目都要配置GOPATH，麻烦
            不同的GoPath都需要下载依赖，那么磁盘中重复的依赖就会非常多


综上所述
    GOPATH的应用场景并不多
    GOPATH 适合处理大量 Go语言源码、多个包组合而成的复杂工程

    而对于需要维护更新的项目，无法解决依赖问题，是无法使用的